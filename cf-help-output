cf: 'cf' is not a registered command. See 'cf help'

=========================================


NAME:
   login - Log user in

ALIAS:
   l

USAGE:
   cf login [-a API_URL] [-u USERNAME] [-p PASSWORD] [-o ORG] [-s SPACE]

WARNING:
   Providing your password as a command line option is highly discouraged
   Your password may be visible to others and may be recorded in your shell history

EXAMPLE:
   cf login (omit username and password to login interactively -- cf will prompt for both)
   cf login -u name@example.com -p pa55woRD (specify username and password as arguments)
   cf login -u name@example.com -p "my password" (use quotes for passwords with a space)
   cf login -u name@example.com -p "\"password\"" (escape quotes if used in password)   cf login --sso (cf will provide a url to obtain a one-time password to login)

OPTIONS:
   -a 				API endpoint (e.g. https://api.example.com)
   -u 				Username
   -p 				Password
   -o 				Org
   -s 				Space
   --sso			Use a one-time password to login
   --skip-ssl-validation	Please don't

=========================================


NAME:
   logout - Log user out

ALIAS:
   lo

USAGE:
   cf logout

=========================================


NAME:
   passwd - Change user password

ALIAS:
   pw

USAGE:
   cf passwd

=========================================


NAME:
   target - Set or view the targeted org or space

ALIAS:
   t

USAGE:
   cf target [-o ORG] [-s SPACE]

OPTIONS:
   -o 	organization
   -s 	space

=========================================


NAME:
   api - Set or view target api url

USAGE:
   cf api [URL]

OPTIONS:
   --skip-ssl-validation	Please don't

=========================================


NAME:
   auth - Authenticate user non-interactively

USAGE:
   cf auth USERNAME PASSWORD

WARNING:
   Providing your password as a command line option is highly discouraged
   Your password may be visible to others and may be recorded in your shell history

EXAMPLE:
   cf auth name@example.com "my password" (use quotes for passwords with a space)
   cf auth name@example.com "\"password\"" (escape quotes if used in password)

=========================================


NAME:
   apps - List all apps in the target space

ALIAS:
   a

USAGE:
   cf apps

=========================================


NAME:
   app - Display health and status for app

USAGE:
   cf app APP

=========================================


NAME:
   push - Push a new app or sync changes to an existing app

ALIAS:
   p

USAGE:
   Push a single app (with or without a manifest):
   cf push APP [-b BUILDPACK_NAME] [-c COMMAND] [-d DOMAIN] [-f MANIFEST_PATH]
   [-i NUM_INSTANCES] [-k DISK] [-m MEMORY] [-n HOST] [-p PATH] [-s STACK] [-t TIMEOUT]
   [--no-hostname] [--no-manifest] [--no-route] [--no-start]

   Push multiple apps with a manifest:
   cf push [-f MANIFEST_PATH]


OPTIONS:
   -b 			Custom buildpack by name (e.g. my-buildpack) or GIT URL (e.g. https://github.com/heroku/heroku-buildpack-play.git)
   -c 			Startup command, set to null to reset to default start command
   -d 			Domain (e.g. example.com)
   -f 			Path to manifest
   -i 			Number of instances
   -k 			Disk limit (e.g. 256M, 1024M, 1G)
   -m 			Memory limit (e.g. 256M, 1024M, 1G)
   -n 			Hostname (e.g. my-subdomain)
   -p 			Path to app directory or file
   -s 			Stack to use (a stack is a pre-built file system, including an operating system, that can run apps)
   -t 			Maximum time (in seconds) for CLI to wait for application start, other server side timeouts may apply
   --no-hostname	Map the root domain to this app
   --no-manifest	Ignore manifest file
   --no-route		Do not map a route to this app
   --no-start		Do not start an app after pushing
   --random-route	Create a random route for this app

=========================================


NAME:
   scale - Change or view the instance count, disk space limit, and memory limit for an app

USAGE:
   cf scale APP [-i INSTANCES] [-k DISK] [-m MEMORY] [-f]

OPTIONS:
   -i 	Number of instances
   -k 	Disk limit (e.g. 256M, 1024M, 1G)
   -m 	Memory limit (e.g. 256M, 1024M, 1G)
   -f	Force restart of app without prompt

=========================================


NAME:
   delete - Delete an app

ALIAS:
   d

USAGE:
   cf delete APP [-f -r]

OPTIONS:
   -f	Force deletion without confirmation
   -r	Also delete any mapped routes

=========================================


NAME:
   rename - Rename an app

USAGE:
   cf rename APP_NAME NEW_APP_NAME

=========================================


NAME:
   start - Start an app

ALIAS:
   st

USAGE:
   cf start APP

=========================================


NAME:
   stop - Stop an app

ALIAS:
   sp

USAGE:
   cf stop APP

=========================================


NAME:
   restart - Restart an app

ALIAS:
   rs

USAGE:
   cf restart APP

=========================================


NAME:
   restage - Restage an app

ALIAS:
   rg

USAGE:
   cf restage APP

=========================================


NAME:
   events - Show recent app events

USAGE:
   cf events APP

=========================================


NAME:
   files - Print out a list of files in a directory or the contents of a specific file

ALIAS:
   f

USAGE:
   cf files APP [-i INSTANCE] [PATH]

OPTIONS:
   -i 	Instance

=========================================


NAME:
   logs - Tail or show recent logs for an app

USAGE:
   cf logs APP

OPTIONS:
   --recent	Dump recent logs instead of tailing

=========================================


NAME:
   env - Show all env variables for an app

ALIAS:
   e

USAGE:
   cf env APP

=========================================


NAME:
   set-env - Set an env variable for an app

ALIAS:
   se

USAGE:
   cf set-env APP NAME VALUE

=========================================


NAME:
   unset-env - Remove an env variable

USAGE:
   cf unset-env APP NAME

=========================================


NAME:
   stacks - List all stacks (a stack is a pre-built file system, including an operating system, that can run apps)

USAGE:
   cf stacks

=========================================


NAME:
   marketplace - List available offerings in the marketplace

ALIAS:
   m

USAGE:
   cf marketplace

=========================================


NAME:
   services - List all service instances in the target space

ALIAS:
   s

USAGE:
   cf services

=========================================


NAME:
   service - Show service instance info

USAGE:
   cf service SERVICE_INSTANCE

=========================================


NAME:
   create-service - Create a service instance

ALIAS:
   cs

USAGE:
   cf create-service SERVICE PLAN SERVICE_INSTANCE

EXAMPLE:
   cf create-service cleardb spark clear-db-mine

TIP:
   Use 'cf create-user-provided-service' to make user-provided services available to cf apps

=========================================


NAME:
   update-service - Update a service instance

USAGE:
   cf update-service SERVICE [-p NEW_PLAN]

OPTIONS:
   -p 	Change service plan for a service instance

=========================================


NAME:
   delete-service - Delete a service instance

ALIAS:
   ds

USAGE:
   cf delete-service SERVICE_INSTANCE [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-service - Rename a service instance

USAGE:
   cf rename-service SERVICE_INSTANCE NEW_SERVICE_INSTANCE

=========================================


NAME:
   bind-service - Bind a service instance to an app

ALIAS:
   bs

USAGE:
   cf bind-service APP SERVICE_INSTANCE

=========================================


NAME:
   unbind-service - Unbind a service instance from an app

ALIAS:
   us

USAGE:
   cf unbind-service APP SERVICE_INSTANCE

=========================================


NAME:
   create-user-provided-service - Make a user-provided service instance available to cf apps

ALIAS:
   cups

USAGE:
   cf create-user-provided-service SERVICE_INSTANCE [-p CREDENTIALS] [-l SYSLOG-DRAIN-URL]

   Pass comma separated credential parameter names to enable interactive mode:
   cf create-user-provided-service SERVICE_INSTANCE -p "comma, separated, parameter, names"

   Pass credential parameters as JSON to create a service non-interactively:
   cf create-user-provided-service SERVICE_INSTANCE -p '{"name":"value","name":"value"}'

EXAMPLE:
   cf create-user-provided-service oracle-db-mine -p "username, password"
   cf create-user-provided-service oracle-db-mine -p '{"username":"admin","password":"pa55woRD"}'
   cf create-user-provided-service my-drain-service -l syslog://example.com


OPTIONS:
   -p 	Credentials
   -l 	Syslog Drain Url

=========================================


NAME:
   update-user-provided-service - Update user-provided service instance name value pairs

ALIAS:
   uups

USAGE:
   cf update-user-provided-service SERVICE_INSTANCE [-p PARAMETERS] [-l SYSLOG-DRAIN-URL]'

EXAMPLE:
   cf update-user-provided-service oracle-db-mine -p '{"username":"admin","password":"pa55woRD"}'
   cf update-user-provided-service my-drain-service -l syslog://example.com

OPTIONS:
   -p 	Parameters
   -l 	Syslog Drain Url

=========================================


NAME:
   orgs - List all orgs

ALIAS:
   o

USAGE:
   cf orgs

=========================================


NAME:
   org - Show org info

USAGE:
   cf org ORG

=========================================


NAME:
   create-org - Create an org

ALIAS:
   co

USAGE:
   cf create-org ORG

OPTIONS:
   -q 	Quota to assign to the newly created org (excluding this option results in assignment of default quota)

=========================================


NAME:
   delete-org - Delete an org

USAGE:
   cf delete-org ORG [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-org - Rename an org

USAGE:
   cf rename-org ORG NEW_ORG

=========================================


NAME:
   spaces - List all spaces in an org

USAGE:
   cf spaces

=========================================


NAME:
   space - Show space info

USAGE:
   cf space SPACE

=========================================


NAME:
   create-space - Create a space

USAGE:
   cf create-space SPACE [-o ORG]

OPTIONS:
   -o 	Organization

=========================================


NAME:
   delete-space - Delete a space

USAGE:
   cf delete-space SPACE [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-space - Rename a space

USAGE:
   cf rename-space SPACE NEW_SPACE

=========================================


NAME:
   domains - List domains in the target org

USAGE:
   cf domains

=========================================


NAME:
   create-domain - Create a domain in an org for later use

USAGE:
   cf create-domain ORG DOMAIN

=========================================


NAME:
   delete-domain - Delete a domain

USAGE:
   cf delete-domain DOMAIN [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   create-shared-domain - Create a domain that can be used by all orgs (admin-only)

USAGE:
   cf create-shared-domain DOMAIN

=========================================


NAME:
   delete-shared-domain - Delete a shared domain

USAGE:
   cf delete-shared-domain DOMAIN [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   routes - List all routes in the current space

ALIAS:
   r

USAGE:
   cf routes

=========================================


NAME:
   create-route - Create a url route in a space for later use

USAGE:
   cf create-route SPACE DOMAIN [-n HOSTNAME]

OPTIONS:
   -n 	Hostname

=========================================


NAME:
   map-route - Add a url route to an app

USAGE:
   cf map-route APP DOMAIN [-n HOSTNAME]

OPTIONS:
   -n 	Hostname

=========================================


NAME:
   unmap-route - Remove a url route from an app

USAGE:
   cf unmap-route APP DOMAIN [-n HOSTNAME]

OPTIONS:
   -n 	Hostname

=========================================


NAME:
   delete-route - Delete a route

USAGE:
   cf delete-route DOMAIN [-n HOSTNAME] [-f]

OPTIONS:
   -f	Force deletion without confirmation
   -n 	Hostname

=========================================


NAME:
   delete-orphaned-routes - Delete all orphaned routes (e.g.: those that are not mapped to an app)

USAGE:
   cf delete-orphaned-routes [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   buildpacks - List all buildpacks

USAGE:
   cf buildpacks

=========================================


NAME:
   create-buildpack - Create a buildpack

USAGE:
   cf create-buildpack BUILDPACK PATH POSITION [--enable|--disable]

TIP:
   Path should be a zip file, a url to a zip file, or a local directory. Position is an integer, sets priority, and is sorted from lowest to highest.

OPTIONS:
   --enable	Enable the buildpack
   --disable	Disable the buildpack

=========================================


NAME:
   update-buildpack - Update a buildpack

USAGE:
   cf update-buildpack BUILDPACK [-p PATH] [-i POSITION] [--enable|--disable] [--lock|--unlock]

OPTIONS:
   -i 		Buildpack position among other buildpacks
   -p 		Path to directory or zip file
   --enable	Enable the buildpack
   --disable	Disable the buildpack
   --lock	Lock the buildpack
   --unlock	Unlock the buildpack

=========================================


NAME:
   rename-buildpack - Rename a buildpack

USAGE:
   cf rename-buildpack BUILDPACK_NAME NEW_BUILDPACK_NAME

=========================================


NAME:
   delete-buildpack - Delete a buildpack

USAGE:
   cf delete-buildpack BUILDPACK [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   create-user - Create a new user

USAGE:
   cf create-user USERNAME PASSWORD

=========================================


NAME:
   delete-user - Delete a user

USAGE:
   cf delete-user USERNAME [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   org-users - Show org users by role

USAGE:
   cf org-users ORG

OPTIONS:
   -a	List all users in the org

=========================================


NAME:
   set-org-role - Assign an org role to a user

USAGE:
   cf set-org-role USERNAME ORG ROLE

ROLES:
   OrgManager - Invite and manage users, select and change plans, and set spending limits
   BillingManager - Create and manage the billing account and payment info
   OrgAuditor - Read-only access to org info and reports


=========================================


NAME:
   unset-org-role - Remove an org role from a user

USAGE:
   cf unset-org-role USERNAME ORG ROLE

ROLES:
   OrgManager - Invite and manage users, select and change plans, and set spending limits
   BillingManager - Create and manage the billing account and payment info
   OrgAuditor - Read-only access to org info and reports


=========================================


NAME:
   space-users - Show space users by role

USAGE:
   cf space-users ORG SPACE

=========================================


NAME:
   set-space-role - Assign a space role to a user

USAGE:
   cf set-space-role USERNAME ORG SPACE ROLE

ROLES:
   SpaceManager - Invite and manage users, and enable features for a given space
   SpaceDeveloper - Create and manage apps and services, and see logs and reports
   SpaceAuditor - View logs, reports, and settings on this space


=========================================


NAME:
   unset-space-role - Remove a space role from a user

USAGE:
   cf unset-space-role USERNAME ORG SPACE ROLE

ROLES:
   SpaceManager - Invite and manage users, and enable features for a given space
   SpaceDeveloper - Create and manage apps and services, and see logs and reports
   SpaceAuditor - View logs, reports, and settings on this space


=========================================


NAME:
   quotas - List available usage quotas

USAGE:
   cf quotas

=========================================


NAME:
   quota - Show quota info

USAGE:
   cf quota QUOTA

=========================================


NAME:
   set-quota - Assign a quota to an org

USAGE:
   cf set-quota ORG QUOTA

TIP:
   View allowable quotas with 'cf quotas'

=========================================


NAME:
   create-quota - Define a new resource quota

USAGE:
   cf create-quota QUOTA [-m TOTAL_MEMORY] [-i INSTANCE_MEMORY] [-r ROUTES] [-s SERVICE_INSTANCES] [--allow-paid-service-plans]

OPTIONS:
   -i 				Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G). -1 represents an unlimited amount.
   -m 				Total amount of memory (e.g. 1024M, 1G, 10G)
   -r 				Total number of routes
   -s 				Total number of service instances
   --allow-paid-service-plans	Can provision instances of paid service plans

=========================================


NAME:
   delete-quota - Delete a quota

USAGE:
   cf delete-quota QUOTA [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   update-quota - Update an existing resource quota

USAGE:
   cf update-quota QUOTA [-m TOTAL_MEMORY] [-i INSTANCE_MEMORY][-n NEW_NAME] [-r ROUTES] [-s SERVICE_INSTANCES] [--allow-paid-service-plans | --disallow-paid-service-plans]

OPTIONS:
   -i 					Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G)
   -m 					Total amount of memory (e.g. 1024M, 1G, 10G)
   -n 					New name
   -r 					Total number of routes
   -s 					Total number of service instances
   --allow-paid-service-plans		Can provision instances of paid service plans
   --disallow-paid-service-plans	Cannot provision instances of paid service plans

=========================================


NAME:
   space-quota - Show space quota info

USAGE:
   cf space-quota SPACE_QUOTA_NAME

=========================================


NAME:
   space-quotas - List available space resource quotas

USAGE:
   cf space-quotas

=========================================


NAME:
   create-space-quota - Define a new space resource quota

USAGE:
   cf create-space-quota QUOTA [-i INSTANCE_MEMORY] [-m MEMORY] [-r ROUTES] [-s SERVICE_INSTANCES] [--allow-paid-service-plans]

OPTIONS:
   -i 				Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G). -1 represents an unlimited amount. (Default: unlimited)
   -m 				Total amount of memory a space can have (e.g. 1024M, 1G, 10G)
   -r 				Total number of routes
   -s 				Total number of service instances
   --allow-paid-service-plans	Can provision instances of paid service plans (Default: disallowed)

=========================================


NAME:
   update-space-quota - update an existing space quota

USAGE:
   cf update-space-quota SPACE-QUOTA-NAME [-i MAX-INSTANCE-MEMORY] [-m MEMORY] [-n NEW_NAME] [-r ROUTES] [-s SERVICES] [--allow-paid-service-plans | --disallow-paid-service-plans]

OPTIONS:
   -i 					Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G). -1 represents an unlimited amount.
   -m 					Total amount of memory a space can have (e.g. 1024M, 1G, 10G)
   -n 					New name
   -r 					Total number of routes
   -s 					Total number of service instances
   --allow-paid-service-plans		Can provision instances of paid service plans
   --disallow-paid-service-plans	Can not provision instances of paid service plans

=========================================


NAME:
   delete-space-quota - Delete a space quota definition and unassign the space quota from all spaces

USAGE:
   cf delete-space-quota SPACE-QUOTA-NAME

OPTIONS:
   -f	Force delete (do not prompt for confirmation)

=========================================


NAME:
   set-space-quota - Assign a space quota definition to a space

USAGE:
   cf set-space-quota SPACE-NAME SPACE-QUOTA-NAME

=========================================


NAME:
   unset-space-quota - Unassign a quota from a space

USAGE:
   cf unset-space-quota SPACE QUOTA



=========================================


NAME:
   service-auth-tokens - List service auth tokens

USAGE:
   cf service-auth-tokens

=========================================


NAME:
   create-service-auth-token - Create a service auth token

USAGE:
   cf create-service-auth-token LABEL PROVIDER TOKEN

=========================================


NAME:
   update-service-auth-token - Update a service auth token

USAGE:
   cf update-service-auth-token LABEL PROVIDER TOKEN

=========================================


NAME:
   delete-service-auth-token - Delete a service auth token

USAGE:
   cf delete-service-auth-token LABEL PROVIDER [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   service-brokers - List service brokers

USAGE:
   cf service-brokers

=========================================


NAME:
   create-service-broker - Create a service broker

USAGE:
   cf create-service-broker SERVICE_BROKER USERNAME PASSWORD URL

=========================================


NAME:
   update-service-broker - Update a service broker

USAGE:
   cf update-service-broker SERVICE_BROKER USERNAME PASSWORD URL

=========================================


NAME:
   delete-service-broker - Delete a service broker

USAGE:
   cf delete-service-broker SERVICE_BROKER [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-service-broker - Rename a service broker

USAGE:
   cf rename-service-broker SERVICE_BROKER NEW_SERVICE_BROKER

=========================================


NAME:
   migrate-service-instances - Migrate service instances from one service plan to another

USAGE:
   cf migrate-service-instances v1_SERVICE v1_PROVIDER v1_PLAN v2_SERVICE v2_PLAN

WARNING: This operation is internal to Cloud Foundry; service brokers will not be contacted and resources for service instances will not be altered. The primary use case for this operation is to replace a service broker which implements the v1 Service Broker API with a broker which implements the v2 API by remapping service instances from v1 plans to v2 plans.  We recommend making the v1 plan private or shutting down the v1 broker to prevent additional instances from being created. Once service instances have been migrated, the v1 services and plans can be removed from Cloud Foundry.

OPTIONS:
   -f	Force migration without confirmation

=========================================


NAME:
   purge-service-offering - Recursively remove a service and child objects from Cloud Foundry database without making requests to a service broker

USAGE:
   cf purge-service-offering SERVICE [-p PROVIDER]

WARNING: This operation assumes that the service broker responsible for this service offering is no longer available, and all service instances have been deleted, leaving orphan records in Cloud Foundry's database. All knowledge of the service will be removed from Cloud Foundry, including service instances and service bindings. No attempt will be made to contact the service broker; running this command without destroying the service broker will cause orphan service instances. After running this command you may want to run either delete-service-auth-token or delete-service-broker to complete the cleanup.

OPTIONS:
   -p 	Provider
   -f	Force deletion without confirmation

=========================================


NAME:
   service-access - List service access settings

USAGE:
   cf service-access [-b BROKER] [-e SERVICE] [-o ORG]

OPTIONS:
   -b 	access for plans of a particular broker
   -e 	access for plans of a particular service offering
   -o 	plans accessible by a particular organization

=========================================


NAME:
   enable-service-access - Enable access to a service or service plan for one or all orgs

USAGE:
   cf enable-service-access SERVICE [-p PLAN] [-o ORG]

OPTIONS:
   -p 	Enable access to a specified service plan
   -o 	Enable access for a specified organization

=========================================


NAME:
   disable-service-access - Disable access to a service or service plan for one or all orgs

USAGE:
   cf disable-service-access SERVICE [-p PLAN] [-o ORG]

OPTIONS:
   -p 	Disable access to a specified service plan
   -o 	Disable access for a specified organization

=========================================


NAME:
   security-group - Show a single security group

USAGE:
   cf security-group SECURITY_GROUP

=========================================


NAME:
   security-groups - List all security groups

USAGE:
   cf security-group

=========================================


NAME:
   create-security-group - Create a security group

USAGE:
   cf create-security-group SECURITY_GROUP PATH_TO_JSON_RULES_FILE

   The provided path can be an absolute or relative path to a file.  The file should have
   a single array with JSON objects inside describing the rules.  The JSON Base Object is 
   omitted and only the square brackets and associated child object are required in the file.  

   Valid json file example:
   [
     {
       "protocol": "tcp",
       "destination": "10.244.1.18",
       "ports": "3306"
     }
   ]

=========================================


NAME:
   update-security-group - Update a security group

USAGE:
   cf update-security-group SECURITY_GROUP PATH_TO_JSON_RULES_FILE

   The provided path can be an absolute or relative path to a file.
   It should have a single array with JSON objects inside describing the rules.

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   delete-security-group - Deletes a security group

USAGE:
   cf delete-security-group SECURITY_GROUP [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   bind-security-group - Bind a security group to a space

USAGE:
   cf bind-security-group SECURITY_GROUP ORG SPACE

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   unbind-security-group - Unbind a security group from a space

USAGE:
   cf unbind-security-group SECURITY_GROUP ORG SPACE

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   bind-staging-security-group - Bind a security group to the list of security groups to be used for staging applications

USAGE:
   cf bind-staging-security-group SECURITY_GROUP

=========================================


NAME:
   staging-security-groups - List security groups in the staging set for applications

USAGE:
   cf staging-security-groups

=========================================


NAME:
   unbind-staging-security-group - Unbind a security group from the set of security groups for staging applications

USAGE:
   cf unbind-staging-security-group SECURITY_GROUP

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   bind-running-security-group - Bind a security group to the list of security groups to be used for running applications

USAGE:
   cf bind-running-security-group SECURITY_GROUP

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   running-security-groups - List security groups in the set of security groups for running applications

USAGE:
   cf running-security-groups

=========================================


NAME:
   unbind-running-security-group - Unbind a security group from the set of security groups for running applications

USAGE:
   cf unbind-running-security-group SECURITY_GROUP

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   running-environment-variable-group - Retrieve the contents of the running environment variable group

ALIAS:
   revg

USAGE:
   cf running-environment-variable-group

=========================================


NAME:
   staging-environment-variable-group - Retrieve the contents of the staging environment variable group

ALIAS:
   sevg

USAGE:
   cf staging-environment-variable-group

=========================================


NAME:
   set-staging-environment-variable-group - Pass parameters as JSON to create a staging environment variable group

ALIAS:
   ssevg

USAGE:
   cf set-staging-environment-variable-group '{"name":"value","name":"value"}'

=========================================


NAME:
   set-running-environment-variable-group - Pass parameters as JSON to create a running environment variable group

ALIAS:
   srevg

USAGE:
   cf set-running-environment-variable-group '{"name":"value","name":"value"}'

=========================================


NAME:
   feature-flags - Retrieve list of feature flags with status of each flag-able feature

USAGE:
   cf feature-flags

=========================================


NAME:
   feature-flag - Retrieve an individual feature flag with status

USAGE:
   cf feature-flag

=========================================


NAME:
   enable-feature-flag - Enable the use of a feature so that users have access to and can use the feature.

USAGE:
   cf enable-feature-flag FEATURE_NAME

=========================================


NAME:
   disable-feature-flag - Disable the use of a feature so that users have access to and can use the feature.

USAGE:
   cf disable-feature-flag FEATURE_NAME

=========================================


NAME:
   curl - Executes a raw request, content-type set to application/json by default

USAGE:
   cf curl PATH [-iv] [-X METHOD] [-H HEADER] [-d DATA] [--output FILE]

OPTIONS:
   -i		Include response headers in the output
   -v		Enable CF_TRACE output for all requests and responses
   -X 'GET'	HTTP method (GET,POST,PUT,DELETE,etc)
   -H 		Custom headers to include in the request, flag can be specified multiple times
   -d 		HTTP data to include in the request body
   --output 	Write curl body to FILE instead of stdout

=========================================


NAME:
   config - write default values to the config

USAGE:
   cf config [--async-timeout TIMEOUT_IN_MINUTES] [--trace true | false | path/to/file] [--color true | false] [--locale (LOCALE | CLEAR)]

OPTIONS:
   --async-timeout 	Timeout for async HTTP requests
   --trace 		Trace HTTP requests
   --color 		Enable or disable color
   --locale 		Set default locale. If LOCALE is CLEAR, previous locale is deleted.

=========================================


NAME:
   oauth-token - Retrieve and display the OAuth token for the current session

USAGE:
   cf oauth-token

=========================================


NAME:
   plugins - list all available plugin commands

USAGE:
   cf plugins

=========================================


NAME:
   install-plugin - Install the plugin defined in command argument

USAGE:
   cf install-plugin PATH/TO/PLUGIN

=========================================


NAME:
   uninstall-plugin - Uninstall the plugin defined in command argument

USAGE:
   cf uninstall-plugin PLUGIN-NAME

=========================================


cf: 'cf' is not a registered command. See 'cf help'

=========================================


NAME:
   login - Log user in

ALIAS:
   l

USAGE:
   cf login [-a API_URL] [-u USERNAME] [-p PASSWORD] [-o ORG] [-s SPACE]

WARNING:
   Providing your password as a command line option is highly discouraged
   Your password may be visible to others and may be recorded in your shell history

EXAMPLE:
   cf login (omit username and password to login interactively -- cf will prompt for both)
   cf login -u name@example.com -p pa55woRD (specify username and password as arguments)
   cf login -u name@example.com -p "my password" (use quotes for passwords with a space)
   cf login -u name@example.com -p "\"password\"" (escape quotes if used in password)   cf login --sso (cf will provide a url to obtain a one-time password to login)

OPTIONS:
   -a 				API endpoint (e.g. https://api.example.com)
   -u 				Username
   -p 				Password
   -o 				Org
   -s 				Space
   --sso			Use a one-time password to login
   --skip-ssl-validation	Please don't

=========================================


NAME:
   logout - Log user out

ALIAS:
   lo

USAGE:
   cf logout

=========================================


NAME:
   passwd - Change user password

ALIAS:
   pw

USAGE:
   cf passwd

=========================================


NAME:
   target - Set or view the targeted org or space

ALIAS:
   t

USAGE:
   cf target [-o ORG] [-s SPACE]

OPTIONS:
   -o 	organization
   -s 	space

=========================================


NAME:
   api - Set or view target api url

USAGE:
   cf api [URL]

OPTIONS:
   --skip-ssl-validation	Please don't

=========================================


NAME:
   auth - Authenticate user non-interactively

USAGE:
   cf auth USERNAME PASSWORD

WARNING:
   Providing your password as a command line option is highly discouraged
   Your password may be visible to others and may be recorded in your shell history

EXAMPLE:
   cf auth name@example.com "my password" (use quotes for passwords with a space)
   cf auth name@example.com "\"password\"" (escape quotes if used in password)

=========================================


NAME:
   apps - List all apps in the target space

ALIAS:
   a

USAGE:
   cf apps

=========================================


NAME:
   app - Display health and status for app

USAGE:
   cf app APP

=========================================


NAME:
   push - Push a new app or sync changes to an existing app

ALIAS:
   p

USAGE:
   Push a single app (with or without a manifest):
   cf push APP [-b BUILDPACK_NAME] [-c COMMAND] [-d DOMAIN] [-f MANIFEST_PATH]
   [-i NUM_INSTANCES] [-k DISK] [-m MEMORY] [-n HOST] [-p PATH] [-s STACK] [-t TIMEOUT]
   [--no-hostname] [--no-manifest] [--no-route] [--no-start]

   Push multiple apps with a manifest:
   cf push [-f MANIFEST_PATH]


OPTIONS:
   -b 			Custom buildpack by name (e.g. my-buildpack) or GIT URL (e.g. https://github.com/heroku/heroku-buildpack-play.git)
   -c 			Startup command, set to null to reset to default start command
   -d 			Domain (e.g. example.com)
   -f 			Path to manifest
   -i 			Number of instances
   -k 			Disk limit (e.g. 256M, 1024M, 1G)
   -m 			Memory limit (e.g. 256M, 1024M, 1G)
   -n 			Hostname (e.g. my-subdomain)
   -p 			Path to app directory or file
   -s 			Stack to use (a stack is a pre-built file system, including an operating system, that can run apps)
   -t 			Maximum time (in seconds) for CLI to wait for application start, other server side timeouts may apply
   --no-hostname	Map the root domain to this app
   --no-manifest	Ignore manifest file
   --no-route		Do not map a route to this app
   --no-start		Do not start an app after pushing
   --random-route	Create a random route for this app

=========================================


NAME:
   scale - Change or view the instance count, disk space limit, and memory limit for an app

USAGE:
   cf scale APP [-i INSTANCES] [-k DISK] [-m MEMORY] [-f]

OPTIONS:
   -i 	Number of instances
   -k 	Disk limit (e.g. 256M, 1024M, 1G)
   -m 	Memory limit (e.g. 256M, 1024M, 1G)
   -f	Force restart of app without prompt

=========================================


NAME:
   delete - Delete an app

ALIAS:
   d

USAGE:
   cf delete APP [-f -r]

OPTIONS:
   -f	Force deletion without confirmation
   -r	Also delete any mapped routes

=========================================


NAME:
   rename - Rename an app

USAGE:
   cf rename APP_NAME NEW_APP_NAME

=========================================


NAME:
   start - Start an app

ALIAS:
   st

USAGE:
   cf start APP

=========================================


NAME:
   stop - Stop an app

ALIAS:
   sp

USAGE:
   cf stop APP

=========================================


NAME:
   restart - Restart an app

ALIAS:
   rs

USAGE:
   cf restart APP

=========================================


NAME:
   restage - Restage an app

ALIAS:
   rg

USAGE:
   cf restage APP

=========================================


NAME:
   events - Show recent app events

USAGE:
   cf events APP

=========================================


NAME:
   files - Print out a list of files in a directory or the contents of a specific file

ALIAS:
   f

USAGE:
   cf files APP [-i INSTANCE] [PATH]

OPTIONS:
   -i 	Instance

=========================================


NAME:
   logs - Tail or show recent logs for an app

USAGE:
   cf logs APP

OPTIONS:
   --recent	Dump recent logs instead of tailing

=========================================


NAME:
   env - Show all env variables for an app

ALIAS:
   e

USAGE:
   cf env APP

=========================================


NAME:
   set-env - Set an env variable for an app

ALIAS:
   se

USAGE:
   cf set-env APP NAME VALUE

=========================================


NAME:
   unset-env - Remove an env variable

USAGE:
   cf unset-env APP NAME

=========================================


NAME:
   stacks - List all stacks (a stack is a pre-built file system, including an operating system, that can run apps)

USAGE:
   cf stacks

=========================================


NAME:
   marketplace - List available offerings in the marketplace

ALIAS:
   m

USAGE:
   cf marketplace

=========================================


NAME:
   services - List all service instances in the target space

ALIAS:
   s

USAGE:
   cf services

=========================================


NAME:
   service - Show service instance info

USAGE:
   cf service SERVICE_INSTANCE

=========================================


NAME:
   create-service - Create a service instance

ALIAS:
   cs

USAGE:
   cf create-service SERVICE PLAN SERVICE_INSTANCE

EXAMPLE:
   cf create-service cleardb spark clear-db-mine

TIP:
   Use 'cf create-user-provided-service' to make user-provided services available to cf apps

=========================================


NAME:
   update-service - Update a service instance

USAGE:
   cf update-service SERVICE [-p NEW_PLAN]

OPTIONS:
   -p 	Change service plan for a service instance

=========================================


NAME:
   delete-service - Delete a service instance

ALIAS:
   ds

USAGE:
   cf delete-service SERVICE_INSTANCE [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-service - Rename a service instance

USAGE:
   cf rename-service SERVICE_INSTANCE NEW_SERVICE_INSTANCE

=========================================


NAME:
   bind-service - Bind a service instance to an app

ALIAS:
   bs

USAGE:
   cf bind-service APP SERVICE_INSTANCE

=========================================


NAME:
   unbind-service - Unbind a service instance from an app

ALIAS:
   us

USAGE:
   cf unbind-service APP SERVICE_INSTANCE

=========================================


NAME:
   create-user-provided-service - Make a user-provided service instance available to cf apps

ALIAS:
   cups

USAGE:
   cf create-user-provided-service SERVICE_INSTANCE [-p CREDENTIALS] [-l SYSLOG-DRAIN-URL]

   Pass comma separated credential parameter names to enable interactive mode:
   cf create-user-provided-service SERVICE_INSTANCE -p "comma, separated, parameter, names"

   Pass credential parameters as JSON to create a service non-interactively:
   cf create-user-provided-service SERVICE_INSTANCE -p '{"name":"value","name":"value"}'

EXAMPLE:
   cf create-user-provided-service oracle-db-mine -p "username, password"
   cf create-user-provided-service oracle-db-mine -p '{"username":"admin","password":"pa55woRD"}'
   cf create-user-provided-service my-drain-service -l syslog://example.com


OPTIONS:
   -p 	Credentials
   -l 	Syslog Drain Url

=========================================


NAME:
   update-user-provided-service - Update user-provided service instance name value pairs

ALIAS:
   uups

USAGE:
   cf update-user-provided-service SERVICE_INSTANCE [-p PARAMETERS] [-l SYSLOG-DRAIN-URL]'

EXAMPLE:
   cf update-user-provided-service oracle-db-mine -p '{"username":"admin","password":"pa55woRD"}'
   cf update-user-provided-service my-drain-service -l syslog://example.com

OPTIONS:
   -p 	Parameters
   -l 	Syslog Drain Url

=========================================


NAME:
   orgs - List all orgs

ALIAS:
   o

USAGE:
   cf orgs

=========================================


NAME:
   org - Show org info

USAGE:
   cf org ORG

=========================================


NAME:
   create-org - Create an org

ALIAS:
   co

USAGE:
   cf create-org ORG

OPTIONS:
   -q 	Quota to assign to the newly created org (excluding this option results in assignment of default quota)

=========================================


NAME:
   delete-org - Delete an org

USAGE:
   cf delete-org ORG [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-org - Rename an org

USAGE:
   cf rename-org ORG NEW_ORG

=========================================


NAME:
   spaces - List all spaces in an org

USAGE:
   cf spaces

=========================================


NAME:
   space - Show space info

USAGE:
   cf space SPACE

=========================================


NAME:
   create-space - Create a space

USAGE:
   cf create-space SPACE [-o ORG]

OPTIONS:
   -o 	Organization

=========================================


NAME:
   delete-space - Delete a space

USAGE:
   cf delete-space SPACE [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-space - Rename a space

USAGE:
   cf rename-space SPACE NEW_SPACE

=========================================


NAME:
   domains - List domains in the target org

USAGE:
   cf domains

=========================================


NAME:
   create-domain - Create a domain in an org for later use

USAGE:
   cf create-domain ORG DOMAIN

=========================================


NAME:
   delete-domain - Delete a domain

USAGE:
   cf delete-domain DOMAIN [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   create-shared-domain - Create a domain that can be used by all orgs (admin-only)

USAGE:
   cf create-shared-domain DOMAIN

=========================================


NAME:
   delete-shared-domain - Delete a shared domain

USAGE:
   cf delete-shared-domain DOMAIN [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   routes - List all routes in the current space

ALIAS:
   r

USAGE:
   cf routes

=========================================


NAME:
   create-route - Create a url route in a space for later use

USAGE:
   cf create-route SPACE DOMAIN [-n HOSTNAME]

OPTIONS:
   -n 	Hostname

=========================================


NAME:
   map-route - Add a url route to an app

USAGE:
   cf map-route APP DOMAIN [-n HOSTNAME]

OPTIONS:
   -n 	Hostname

=========================================


NAME:
   unmap-route - Remove a url route from an app

USAGE:
   cf unmap-route APP DOMAIN [-n HOSTNAME]

OPTIONS:
   -n 	Hostname

=========================================


NAME:
   delete-route - Delete a route

USAGE:
   cf delete-route DOMAIN [-n HOSTNAME] [-f]

OPTIONS:
   -f	Force deletion without confirmation
   -n 	Hostname

=========================================


NAME:
   delete-orphaned-routes - Delete all orphaned routes (e.g.: those that are not mapped to an app)

USAGE:
   cf delete-orphaned-routes [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   buildpacks - List all buildpacks

USAGE:
   cf buildpacks

=========================================


NAME:
   create-buildpack - Create a buildpack

USAGE:
   cf create-buildpack BUILDPACK PATH POSITION [--enable|--disable]

TIP:
   Path should be a zip file, a url to a zip file, or a local directory. Position is an integer, sets priority, and is sorted from lowest to highest.

OPTIONS:
   --enable	Enable the buildpack
   --disable	Disable the buildpack

=========================================


NAME:
   update-buildpack - Update a buildpack

USAGE:
   cf update-buildpack BUILDPACK [-p PATH] [-i POSITION] [--enable|--disable] [--lock|--unlock]

OPTIONS:
   -i 		Buildpack position among other buildpacks
   -p 		Path to directory or zip file
   --enable	Enable the buildpack
   --disable	Disable the buildpack
   --lock	Lock the buildpack
   --unlock	Unlock the buildpack

=========================================


NAME:
   rename-buildpack - Rename a buildpack

USAGE:
   cf rename-buildpack BUILDPACK_NAME NEW_BUILDPACK_NAME

=========================================


NAME:
   delete-buildpack - Delete a buildpack

USAGE:
   cf delete-buildpack BUILDPACK [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   create-user - Create a new user

USAGE:
   cf create-user USERNAME PASSWORD

=========================================


NAME:
   delete-user - Delete a user

USAGE:
   cf delete-user USERNAME [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   org-users - Show org users by role

USAGE:
   cf org-users ORG

OPTIONS:
   -a	List all users in the org

=========================================


NAME:
   set-org-role - Assign an org role to a user

USAGE:
   cf set-org-role USERNAME ORG ROLE

ROLES:
   OrgManager - Invite and manage users, select and change plans, and set spending limits
   BillingManager - Create and manage the billing account and payment info
   OrgAuditor - Read-only access to org info and reports


=========================================


NAME:
   unset-org-role - Remove an org role from a user

USAGE:
   cf unset-org-role USERNAME ORG ROLE

ROLES:
   OrgManager - Invite and manage users, select and change plans, and set spending limits
   BillingManager - Create and manage the billing account and payment info
   OrgAuditor - Read-only access to org info and reports


=========================================


NAME:
   space-users - Show space users by role

USAGE:
   cf space-users ORG SPACE

=========================================


NAME:
   set-space-role - Assign a space role to a user

USAGE:
   cf set-space-role USERNAME ORG SPACE ROLE

ROLES:
   SpaceManager - Invite and manage users, and enable features for a given space
   SpaceDeveloper - Create and manage apps and services, and see logs and reports
   SpaceAuditor - View logs, reports, and settings on this space


=========================================


NAME:
   unset-space-role - Remove a space role from a user

USAGE:
   cf unset-space-role USERNAME ORG SPACE ROLE

ROLES:
   SpaceManager - Invite and manage users, and enable features for a given space
   SpaceDeveloper - Create and manage apps and services, and see logs and reports
   SpaceAuditor - View logs, reports, and settings on this space


=========================================


NAME:
   quotas - List available usage quotas

USAGE:
   cf quotas

=========================================


NAME:
   quota - Show quota info

USAGE:
   cf quota QUOTA

=========================================


NAME:
   set-quota - Assign a quota to an org

USAGE:
   cf set-quota ORG QUOTA

TIP:
   View allowable quotas with 'cf quotas'

=========================================


NAME:
   create-quota - Define a new resource quota

USAGE:
   cf create-quota QUOTA [-m TOTAL_MEMORY] [-i INSTANCE_MEMORY] [-r ROUTES] [-s SERVICE_INSTANCES] [--allow-paid-service-plans]

OPTIONS:
   -i 				Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G). -1 represents an unlimited amount.
   -m 				Total amount of memory (e.g. 1024M, 1G, 10G)
   -r 				Total number of routes
   -s 				Total number of service instances
   --allow-paid-service-plans	Can provision instances of paid service plans

=========================================


NAME:
   delete-quota - Delete a quota

USAGE:
   cf delete-quota QUOTA [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   update-quota - Update an existing resource quota

USAGE:
   cf update-quota QUOTA [-m TOTAL_MEMORY] [-i INSTANCE_MEMORY][-n NEW_NAME] [-r ROUTES] [-s SERVICE_INSTANCES] [--allow-paid-service-plans | --disallow-paid-service-plans]

OPTIONS:
   -i 					Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G)
   -m 					Total amount of memory (e.g. 1024M, 1G, 10G)
   -n 					New name
   -r 					Total number of routes
   -s 					Total number of service instances
   --allow-paid-service-plans		Can provision instances of paid service plans
   --disallow-paid-service-plans	Cannot provision instances of paid service plans

=========================================


NAME:
   space-quota - Show space quota info

USAGE:
   cf space-quota SPACE_QUOTA_NAME

=========================================


NAME:
   space-quotas - List available space resource quotas

USAGE:
   cf space-quotas

=========================================


NAME:
   create-space-quota - Define a new space resource quota

USAGE:
   cf create-space-quota QUOTA [-i INSTANCE_MEMORY] [-m MEMORY] [-r ROUTES] [-s SERVICE_INSTANCES] [--allow-paid-service-plans]

OPTIONS:
   -i 				Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G). -1 represents an unlimited amount. (Default: unlimited)
   -m 				Total amount of memory a space can have (e.g. 1024M, 1G, 10G)
   -r 				Total number of routes
   -s 				Total number of service instances
   --allow-paid-service-plans	Can provision instances of paid service plans (Default: disallowed)

=========================================


NAME:
   update-space-quota - update an existing space quota

USAGE:
   cf update-space-quota SPACE-QUOTA-NAME [-i MAX-INSTANCE-MEMORY] [-m MEMORY] [-n NEW_NAME] [-r ROUTES] [-s SERVICES] [--allow-paid-service-plans | --disallow-paid-service-plans]

OPTIONS:
   -i 					Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G). -1 represents an unlimited amount.
   -m 					Total amount of memory a space can have (e.g. 1024M, 1G, 10G)
   -n 					New name
   -r 					Total number of routes
   -s 					Total number of service instances
   --allow-paid-service-plans		Can provision instances of paid service plans
   --disallow-paid-service-plans	Can not provision instances of paid service plans

=========================================


NAME:
   delete-space-quota - Delete a space quota definition and unassign the space quota from all spaces

USAGE:
   cf delete-space-quota SPACE-QUOTA-NAME

OPTIONS:
   -f	Force delete (do not prompt for confirmation)

=========================================


NAME:
   set-space-quota - Assign a space quota definition to a space

USAGE:
   cf set-space-quota SPACE-NAME SPACE-QUOTA-NAME

=========================================


NAME:
   unset-space-quota - Unassign a quota from a space

USAGE:
   cf unset-space-quota SPACE QUOTA



=========================================


NAME:
   service-auth-tokens - List service auth tokens

USAGE:
   cf service-auth-tokens

=========================================


NAME:
   create-service-auth-token - Create a service auth token

USAGE:
   cf create-service-auth-token LABEL PROVIDER TOKEN

=========================================


NAME:
   update-service-auth-token - Update a service auth token

USAGE:
   cf update-service-auth-token LABEL PROVIDER TOKEN

=========================================


NAME:
   delete-service-auth-token - Delete a service auth token

USAGE:
   cf delete-service-auth-token LABEL PROVIDER [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   service-brokers - List service brokers

USAGE:
   cf service-brokers

=========================================


NAME:
   create-service-broker - Create a service broker

USAGE:
   cf create-service-broker SERVICE_BROKER USERNAME PASSWORD URL

=========================================


NAME:
   update-service-broker - Update a service broker

USAGE:
   cf update-service-broker SERVICE_BROKER USERNAME PASSWORD URL

=========================================


NAME:
   delete-service-broker - Delete a service broker

USAGE:
   cf delete-service-broker SERVICE_BROKER [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-service-broker - Rename a service broker

USAGE:
   cf rename-service-broker SERVICE_BROKER NEW_SERVICE_BROKER

=========================================


NAME:
   migrate-service-instances - Migrate service instances from one service plan to another

USAGE:
   cf migrate-service-instances v1_SERVICE v1_PROVIDER v1_PLAN v2_SERVICE v2_PLAN

WARNING: This operation is internal to Cloud Foundry; service brokers will not be contacted and resources for service instances will not be altered. The primary use case for this operation is to replace a service broker which implements the v1 Service Broker API with a broker which implements the v2 API by remapping service instances from v1 plans to v2 plans.  We recommend making the v1 plan private or shutting down the v1 broker to prevent additional instances from being created. Once service instances have been migrated, the v1 services and plans can be removed from Cloud Foundry.

OPTIONS:
   -f	Force migration without confirmation

=========================================


NAME:
   purge-service-offering - Recursively remove a service and child objects from Cloud Foundry database without making requests to a service broker

USAGE:
   cf purge-service-offering SERVICE [-p PROVIDER]

WARNING: This operation assumes that the service broker responsible for this service offering is no longer available, and all service instances have been deleted, leaving orphan records in Cloud Foundry's database. All knowledge of the service will be removed from Cloud Foundry, including service instances and service bindings. No attempt will be made to contact the service broker; running this command without destroying the service broker will cause orphan service instances. After running this command you may want to run either delete-service-auth-token or delete-service-broker to complete the cleanup.

OPTIONS:
   -p 	Provider
   -f	Force deletion without confirmation

=========================================


NAME:
   service-access - List service access settings

USAGE:
   cf service-access [-b BROKER] [-e SERVICE] [-o ORG]

OPTIONS:
   -b 	access for plans of a particular broker
   -e 	access for plans of a particular service offering
   -o 	plans accessible by a particular organization

=========================================


NAME:
   enable-service-access - Enable access to a service or service plan for one or all orgs

USAGE:
   cf enable-service-access SERVICE [-p PLAN] [-o ORG]

OPTIONS:
   -p 	Enable access to a specified service plan
   -o 	Enable access for a specified organization

=========================================


NAME:
   disable-service-access - Disable access to a service or service plan for one or all orgs

USAGE:
   cf disable-service-access SERVICE [-p PLAN] [-o ORG]

OPTIONS:
   -p 	Disable access to a specified service plan
   -o 	Disable access for a specified organization

=========================================


NAME:
   security-group - Show a single security group

USAGE:
   cf security-group SECURITY_GROUP

=========================================


NAME:
   security-groups - List all security groups

USAGE:
   cf security-group

=========================================


NAME:
   create-security-group - Create a security group

USAGE:
   cf create-security-group SECURITY_GROUP PATH_TO_JSON_RULES_FILE

   The provided path can be an absolute or relative path to a file.  The file should have
   a single array with JSON objects inside describing the rules.  The JSON Base Object is 
   omitted and only the square brackets and associated child object are required in the file.  

   Valid json file example:
   [
     {
       "protocol": "tcp",
       "destination": "10.244.1.18",
       "ports": "3306"
     }
   ]

=========================================


NAME:
   update-security-group - Update a security group

USAGE:
   cf update-security-group SECURITY_GROUP PATH_TO_JSON_RULES_FILE

   The provided path can be an absolute or relative path to a file.
   It should have a single array with JSON objects inside describing the rules.

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   delete-security-group - Deletes a security group

USAGE:
   cf delete-security-group SECURITY_GROUP [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   bind-security-group - Bind a security group to a space

USAGE:
   cf bind-security-group SECURITY_GROUP ORG SPACE

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   unbind-security-group - Unbind a security group from a space

USAGE:
   cf unbind-security-group SECURITY_GROUP ORG SPACE

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   bind-staging-security-group - Bind a security group to the list of security groups to be used for staging applications

USAGE:
   cf bind-staging-security-group SECURITY_GROUP

=========================================


NAME:
   staging-security-groups - List security groups in the staging set for applications

USAGE:
   cf staging-security-groups

=========================================


NAME:
   unbind-staging-security-group - Unbind a security group from the set of security groups for staging applications

USAGE:
   cf unbind-staging-security-group SECURITY_GROUP

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   bind-running-security-group - Bind a security group to the list of security groups to be used for running applications

USAGE:
   cf bind-running-security-group SECURITY_GROUP

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   running-security-groups - List security groups in the set of security groups for running applications

USAGE:
   cf running-security-groups

=========================================


NAME:
   unbind-running-security-group - Unbind a security group from the set of security groups for running applications

USAGE:
   cf unbind-running-security-group SECURITY_GROUP

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   running-environment-variable-group - Retrieve the contents of the running environment variable group

ALIAS:
   revg

USAGE:
   cf running-environment-variable-group

=========================================


NAME:
   staging-environment-variable-group - Retrieve the contents of the staging environment variable group

ALIAS:
   sevg

USAGE:
   cf staging-environment-variable-group

=========================================


NAME:
   set-staging-environment-variable-group - Pass parameters as JSON to create a staging environment variable group

ALIAS:
   ssevg

USAGE:
   cf set-staging-environment-variable-group '{"name":"value","name":"value"}'

=========================================


NAME:
   set-running-environment-variable-group - Pass parameters as JSON to create a running environment variable group

ALIAS:
   srevg

USAGE:
   cf set-running-environment-variable-group '{"name":"value","name":"value"}'

=========================================


NAME:
   feature-flags - Retrieve list of feature flags with status of each flag-able feature

USAGE:
   cf feature-flags

=========================================


NAME:
   feature-flag - Retrieve an individual feature flag with status

USAGE:
   cf feature-flag

=========================================


NAME:
   enable-feature-flag - Enable the use of a feature so that users have access to and can use the feature.

USAGE:
   cf enable-feature-flag FEATURE_NAME

=========================================


NAME:
   disable-feature-flag - Disable the use of a feature so that users have access to and can use the feature.

USAGE:
   cf disable-feature-flag FEATURE_NAME

=========================================


NAME:
   curl - Executes a raw request, content-type set to application/json by default

USAGE:
   cf curl PATH [-iv] [-X METHOD] [-H HEADER] [-d DATA] [--output FILE]

OPTIONS:
   -i		Include response headers in the output
   -v		Enable CF_TRACE output for all requests and responses
   -X 'GET'	HTTP method (GET,POST,PUT,DELETE,etc)
   -H 		Custom headers to include in the request, flag can be specified multiple times
   -d 		HTTP data to include in the request body
   --output 	Write curl body to FILE instead of stdout

=========================================


NAME:
   config - write default values to the config

USAGE:
   cf config [--async-timeout TIMEOUT_IN_MINUTES] [--trace true | false | path/to/file] [--color true | false] [--locale (LOCALE | CLEAR)]

OPTIONS:
   --async-timeout 	Timeout for async HTTP requests
   --trace 		Trace HTTP requests
   --color 		Enable or disable color
   --locale 		Set default locale. If LOCALE is CLEAR, previous locale is deleted.

=========================================


NAME:
   oauth-token - Retrieve and display the OAuth token for the current session

USAGE:
   cf oauth-token

=========================================


NAME:
   plugins - list all available plugin commands

USAGE:
   cf plugins

=========================================


NAME:
   install-plugin - Install the plugin defined in command argument

USAGE:
   cf install-plugin PATH/TO/PLUGIN

=========================================


NAME:
   uninstall-plugin - Uninstall the plugin defined in command argument

USAGE:
   cf uninstall-plugin PLUGIN-NAME

=========================================


cf: 'cf' is not a registered command. See 'cf help'

=========================================


NAME:
   login - Log user in

ALIAS:
   l

USAGE:
   cf login [-a API_URL] [-u USERNAME] [-p PASSWORD] [-o ORG] [-s SPACE]

WARNING:
   Providing your password as a command line option is highly discouraged
   Your password may be visible to others and may be recorded in your shell history

EXAMPLE:
   cf login (omit username and password to login interactively -- cf will prompt for both)
   cf login -u name@example.com -p pa55woRD (specify username and password as arguments)
   cf login -u name@example.com -p "my password" (use quotes for passwords with a space)
   cf login -u name@example.com -p "\"password\"" (escape quotes if used in password)   cf login --sso (cf will provide a url to obtain a one-time password to login)

OPTIONS:
   -a 				API endpoint (e.g. https://api.example.com)
   -u 				Username
   -p 				Password
   -o 				Org
   -s 				Space
   --sso			Use a one-time password to login
   --skip-ssl-validation	Please don't

=========================================


NAME:
   logout - Log user out

ALIAS:
   lo

USAGE:
   cf logout

=========================================


NAME:
   passwd - Change user password

ALIAS:
   pw

USAGE:
   cf passwd

=========================================


NAME:
   target - Set or view the targeted org or space

ALIAS:
   t

USAGE:
   cf target [-o ORG] [-s SPACE]

OPTIONS:
   -o 	organization
   -s 	space

=========================================


NAME:
   api - Set or view target api url

USAGE:
   cf api [URL]

OPTIONS:
   --skip-ssl-validation	Please don't

=========================================


NAME:
   auth - Authenticate user non-interactively

USAGE:
   cf auth USERNAME PASSWORD

WARNING:
   Providing your password as a command line option is highly discouraged
   Your password may be visible to others and may be recorded in your shell history

EXAMPLE:
   cf auth name@example.com "my password" (use quotes for passwords with a space)
   cf auth name@example.com "\"password\"" (escape quotes if used in password)

=========================================


NAME:
   apps - List all apps in the target space

ALIAS:
   a

USAGE:
   cf apps

=========================================


NAME:
   app - Display health and status for app

USAGE:
   cf app APP

=========================================


NAME:
   push - Push a new app or sync changes to an existing app

ALIAS:
   p

USAGE:
   Push a single app (with or without a manifest):
   cf push APP [-b BUILDPACK_NAME] [-c COMMAND] [-d DOMAIN] [-f MANIFEST_PATH]
   [-i NUM_INSTANCES] [-k DISK] [-m MEMORY] [-n HOST] [-p PATH] [-s STACK] [-t TIMEOUT]
   [--no-hostname] [--no-manifest] [--no-route] [--no-start]

   Push multiple apps with a manifest:
   cf push [-f MANIFEST_PATH]


OPTIONS:
   -b 			Custom buildpack by name (e.g. my-buildpack) or GIT URL (e.g. https://github.com/heroku/heroku-buildpack-play.git)
   -c 			Startup command, set to null to reset to default start command
   -d 			Domain (e.g. example.com)
   -f 			Path to manifest
   -i 			Number of instances
   -k 			Disk limit (e.g. 256M, 1024M, 1G)
   -m 			Memory limit (e.g. 256M, 1024M, 1G)
   -n 			Hostname (e.g. my-subdomain)
   -p 			Path to app directory or file
   -s 			Stack to use (a stack is a pre-built file system, including an operating system, that can run apps)
   -t 			Maximum time (in seconds) for CLI to wait for application start, other server side timeouts may apply
   --no-hostname	Map the root domain to this app
   --no-manifest	Ignore manifest file
   --no-route		Do not map a route to this app
   --no-start		Do not start an app after pushing
   --random-route	Create a random route for this app

=========================================


NAME:
   scale - Change or view the instance count, disk space limit, and memory limit for an app

USAGE:
   cf scale APP [-i INSTANCES] [-k DISK] [-m MEMORY] [-f]

OPTIONS:
   -i 	Number of instances
   -k 	Disk limit (e.g. 256M, 1024M, 1G)
   -m 	Memory limit (e.g. 256M, 1024M, 1G)
   -f	Force restart of app without prompt

=========================================


NAME:
   delete - Delete an app

ALIAS:
   d

USAGE:
   cf delete APP [-f -r]

OPTIONS:
   -f	Force deletion without confirmation
   -r	Also delete any mapped routes

=========================================


NAME:
   rename - Rename an app

USAGE:
   cf rename APP_NAME NEW_APP_NAME

=========================================


NAME:
   start - Start an app

ALIAS:
   st

USAGE:
   cf start APP

=========================================


NAME:
   stop - Stop an app

ALIAS:
   sp

USAGE:
   cf stop APP

=========================================


NAME:
   restart - Restart an app

ALIAS:
   rs

USAGE:
   cf restart APP

=========================================


NAME:
   restage - Restage an app

ALIAS:
   rg

USAGE:
   cf restage APP

=========================================


NAME:
   events - Show recent app events

USAGE:
   cf events APP

=========================================


NAME:
   files - Print out a list of files in a directory or the contents of a specific file

ALIAS:
   f

USAGE:
   cf files APP [-i INSTANCE] [PATH]

OPTIONS:
   -i 	Instance

=========================================


NAME:
   logs - Tail or show recent logs for an app

USAGE:
   cf logs APP

OPTIONS:
   --recent	Dump recent logs instead of tailing

=========================================


NAME:
   env - Show all env variables for an app

ALIAS:
   e

USAGE:
   cf env APP

=========================================


NAME:
   set-env - Set an env variable for an app

ALIAS:
   se

USAGE:
   cf set-env APP NAME VALUE

=========================================


NAME:
   unset-env - Remove an env variable

USAGE:
   cf unset-env APP NAME

=========================================


NAME:
   stacks - List all stacks (a stack is a pre-built file system, including an operating system, that can run apps)

USAGE:
   cf stacks

=========================================


NAME:
   marketplace - List available offerings in the marketplace

ALIAS:
   m

USAGE:
   cf marketplace

=========================================


NAME:
   services - List all service instances in the target space

ALIAS:
   s

USAGE:
   cf services

=========================================


NAME:
   service - Show service instance info

USAGE:
   cf service SERVICE_INSTANCE

=========================================


NAME:
   create-service - Create a service instance

ALIAS:
   cs

USAGE:
   cf create-service SERVICE PLAN SERVICE_INSTANCE

EXAMPLE:
   cf create-service cleardb spark clear-db-mine

TIP:
   Use 'cf create-user-provided-service' to make user-provided services available to cf apps

=========================================


NAME:
   update-service - Update a service instance

USAGE:
   cf update-service SERVICE [-p NEW_PLAN]

OPTIONS:
   -p 	Change service plan for a service instance

=========================================


NAME:
   delete-service - Delete a service instance

ALIAS:
   ds

USAGE:
   cf delete-service SERVICE_INSTANCE [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-service - Rename a service instance

USAGE:
   cf rename-service SERVICE_INSTANCE NEW_SERVICE_INSTANCE

=========================================


NAME:
   bind-service - Bind a service instance to an app

ALIAS:
   bs

USAGE:
   cf bind-service APP SERVICE_INSTANCE

=========================================


NAME:
   unbind-service - Unbind a service instance from an app

ALIAS:
   us

USAGE:
   cf unbind-service APP SERVICE_INSTANCE

=========================================


NAME:
   create-user-provided-service - Make a user-provided service instance available to cf apps

ALIAS:
   cups

USAGE:
   cf create-user-provided-service SERVICE_INSTANCE [-p CREDENTIALS] [-l SYSLOG-DRAIN-URL]

   Pass comma separated credential parameter names to enable interactive mode:
   cf create-user-provided-service SERVICE_INSTANCE -p "comma, separated, parameter, names"

   Pass credential parameters as JSON to create a service non-interactively:
   cf create-user-provided-service SERVICE_INSTANCE -p '{"name":"value","name":"value"}'

EXAMPLE:
   cf create-user-provided-service oracle-db-mine -p "username, password"
   cf create-user-provided-service oracle-db-mine -p '{"username":"admin","password":"pa55woRD"}'
   cf create-user-provided-service my-drain-service -l syslog://example.com


OPTIONS:
   -p 	Credentials
   -l 	Syslog Drain Url

=========================================


NAME:
   update-user-provided-service - Update user-provided service instance name value pairs

ALIAS:
   uups

USAGE:
   cf update-user-provided-service SERVICE_INSTANCE [-p PARAMETERS] [-l SYSLOG-DRAIN-URL]'

EXAMPLE:
   cf update-user-provided-service oracle-db-mine -p '{"username":"admin","password":"pa55woRD"}'
   cf update-user-provided-service my-drain-service -l syslog://example.com

OPTIONS:
   -p 	Parameters
   -l 	Syslog Drain Url

=========================================


NAME:
   orgs - List all orgs

ALIAS:
   o

USAGE:
   cf orgs

=========================================


NAME:
   org - Show org info

USAGE:
   cf org ORG

=========================================


NAME:
   create-org - Create an org

ALIAS:
   co

USAGE:
   cf create-org ORG

OPTIONS:
   -q 	Quota to assign to the newly created org (excluding this option results in assignment of default quota)

=========================================


NAME:
   delete-org - Delete an org

USAGE:
   cf delete-org ORG [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-org - Rename an org

USAGE:
   cf rename-org ORG NEW_ORG

=========================================


NAME:
   spaces - List all spaces in an org

USAGE:
   cf spaces

=========================================


NAME:
   space - Show space info

USAGE:
   cf space SPACE

=========================================


NAME:
   create-space - Create a space

USAGE:
   cf create-space SPACE [-o ORG]

OPTIONS:
   -o 	Organization

=========================================


NAME:
   delete-space - Delete a space

USAGE:
   cf delete-space SPACE [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-space - Rename a space

USAGE:
   cf rename-space SPACE NEW_SPACE

=========================================


NAME:
   domains - List domains in the target org

USAGE:
   cf domains

=========================================


NAME:
   create-domain - Create a domain in an org for later use

USAGE:
   cf create-domain ORG DOMAIN

=========================================


NAME:
   delete-domain - Delete a domain

USAGE:
   cf delete-domain DOMAIN [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   create-shared-domain - Create a domain that can be used by all orgs (admin-only)

USAGE:
   cf create-shared-domain DOMAIN

=========================================


NAME:
   delete-shared-domain - Delete a shared domain

USAGE:
   cf delete-shared-domain DOMAIN [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   routes - List all routes in the current space

ALIAS:
   r

USAGE:
   cf routes

=========================================


NAME:
   create-route - Create a url route in a space for later use

USAGE:
   cf create-route SPACE DOMAIN [-n HOSTNAME]

OPTIONS:
   -n 	Hostname

=========================================


NAME:
   map-route - Add a url route to an app

USAGE:
   cf map-route APP DOMAIN [-n HOSTNAME]

OPTIONS:
   -n 	Hostname

=========================================


NAME:
   unmap-route - Remove a url route from an app

USAGE:
   cf unmap-route APP DOMAIN [-n HOSTNAME]

OPTIONS:
   -n 	Hostname

=========================================


NAME:
   delete-route - Delete a route

USAGE:
   cf delete-route DOMAIN [-n HOSTNAME] [-f]

OPTIONS:
   -f	Force deletion without confirmation
   -n 	Hostname

=========================================


NAME:
   delete-orphaned-routes - Delete all orphaned routes (e.g.: those that are not mapped to an app)

USAGE:
   cf delete-orphaned-routes [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   buildpacks - List all buildpacks

USAGE:
   cf buildpacks

=========================================


NAME:
   create-buildpack - Create a buildpack

USAGE:
   cf create-buildpack BUILDPACK PATH POSITION [--enable|--disable]

TIP:
   Path should be a zip file, a url to a zip file, or a local directory. Position is an integer, sets priority, and is sorted from lowest to highest.

OPTIONS:
   --enable	Enable the buildpack
   --disable	Disable the buildpack

=========================================


NAME:
   update-buildpack - Update a buildpack

USAGE:
   cf update-buildpack BUILDPACK [-p PATH] [-i POSITION] [--enable|--disable] [--lock|--unlock]

OPTIONS:
   -i 		Buildpack position among other buildpacks
   -p 		Path to directory or zip file
   --enable	Enable the buildpack
   --disable	Disable the buildpack
   --lock	Lock the buildpack
   --unlock	Unlock the buildpack

=========================================


NAME:
   rename-buildpack - Rename a buildpack

USAGE:
   cf rename-buildpack BUILDPACK_NAME NEW_BUILDPACK_NAME

=========================================


NAME:
   delete-buildpack - Delete a buildpack

USAGE:
   cf delete-buildpack BUILDPACK [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   create-user - Create a new user

USAGE:
   cf create-user USERNAME PASSWORD

=========================================


NAME:
   delete-user - Delete a user

USAGE:
   cf delete-user USERNAME [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   org-users - Show org users by role

USAGE:
   cf org-users ORG

OPTIONS:
   -a	List all users in the org

=========================================


NAME:
   set-org-role - Assign an org role to a user

USAGE:
   cf set-org-role USERNAME ORG ROLE

ROLES:
   OrgManager - Invite and manage users, select and change plans, and set spending limits
   BillingManager - Create and manage the billing account and payment info
   OrgAuditor - Read-only access to org info and reports


=========================================


NAME:
   unset-org-role - Remove an org role from a user

USAGE:
   cf unset-org-role USERNAME ORG ROLE

ROLES:
   OrgManager - Invite and manage users, select and change plans, and set spending limits
   BillingManager - Create and manage the billing account and payment info
   OrgAuditor - Read-only access to org info and reports


=========================================


NAME:
   space-users - Show space users by role

USAGE:
   cf space-users ORG SPACE

=========================================


NAME:
   set-space-role - Assign a space role to a user

USAGE:
   cf set-space-role USERNAME ORG SPACE ROLE

ROLES:
   SpaceManager - Invite and manage users, and enable features for a given space
   SpaceDeveloper - Create and manage apps and services, and see logs and reports
   SpaceAuditor - View logs, reports, and settings on this space


=========================================


NAME:
   unset-space-role - Remove a space role from a user

USAGE:
   cf unset-space-role USERNAME ORG SPACE ROLE

ROLES:
   SpaceManager - Invite and manage users, and enable features for a given space
   SpaceDeveloper - Create and manage apps and services, and see logs and reports
   SpaceAuditor - View logs, reports, and settings on this space


=========================================


NAME:
   quotas - List available usage quotas

USAGE:
   cf quotas

=========================================


NAME:
   quota - Show quota info

USAGE:
   cf quota QUOTA

=========================================


NAME:
   set-quota - Assign a quota to an org

USAGE:
   cf set-quota ORG QUOTA

TIP:
   View allowable quotas with 'cf quotas'

=========================================


NAME:
   create-quota - Define a new resource quota

USAGE:
   cf create-quota QUOTA [-m TOTAL_MEMORY] [-i INSTANCE_MEMORY] [-r ROUTES] [-s SERVICE_INSTANCES] [--allow-paid-service-plans]

OPTIONS:
   -i 				Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G). -1 represents an unlimited amount.
   -m 				Total amount of memory (e.g. 1024M, 1G, 10G)
   -r 				Total number of routes
   -s 				Total number of service instances
   --allow-paid-service-plans	Can provision instances of paid service plans

=========================================


NAME:
   delete-quota - Delete a quota

USAGE:
   cf delete-quota QUOTA [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   update-quota - Update an existing resource quota

USAGE:
   cf update-quota QUOTA [-m TOTAL_MEMORY] [-i INSTANCE_MEMORY][-n NEW_NAME] [-r ROUTES] [-s SERVICE_INSTANCES] [--allow-paid-service-plans | --disallow-paid-service-plans]

OPTIONS:
   -i 					Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G)
   -m 					Total amount of memory (e.g. 1024M, 1G, 10G)
   -n 					New name
   -r 					Total number of routes
   -s 					Total number of service instances
   --allow-paid-service-plans		Can provision instances of paid service plans
   --disallow-paid-service-plans	Cannot provision instances of paid service plans

=========================================


NAME:
   space-quota - Show space quota info

USAGE:
   cf space-quota SPACE_QUOTA_NAME

=========================================


NAME:
   space-quotas - List available space resource quotas

USAGE:
   cf space-quotas

=========================================


NAME:
   create-space-quota - Define a new space resource quota

USAGE:
   cf create-space-quota QUOTA [-i INSTANCE_MEMORY] [-m MEMORY] [-r ROUTES] [-s SERVICE_INSTANCES] [--allow-paid-service-plans]

OPTIONS:
   -i 				Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G). -1 represents an unlimited amount. (Default: unlimited)
   -m 				Total amount of memory a space can have (e.g. 1024M, 1G, 10G)
   -r 				Total number of routes
   -s 				Total number of service instances
   --allow-paid-service-plans	Can provision instances of paid service plans (Default: disallowed)

=========================================


NAME:
   update-space-quota - update an existing space quota

USAGE:
   cf update-space-quota SPACE-QUOTA-NAME [-i MAX-INSTANCE-MEMORY] [-m MEMORY] [-n NEW_NAME] [-r ROUTES] [-s SERVICES] [--allow-paid-service-plans | --disallow-paid-service-plans]

OPTIONS:
   -i 					Maximum amount of memory an application instance can have (e.g. 1024M, 1G, 10G). -1 represents an unlimited amount.
   -m 					Total amount of memory a space can have (e.g. 1024M, 1G, 10G)
   -n 					New name
   -r 					Total number of routes
   -s 					Total number of service instances
   --allow-paid-service-plans		Can provision instances of paid service plans
   --disallow-paid-service-plans	Can not provision instances of paid service plans

=========================================


NAME:
   delete-space-quota - Delete a space quota definition and unassign the space quota from all spaces

USAGE:
   cf delete-space-quota SPACE-QUOTA-NAME

OPTIONS:
   -f	Force delete (do not prompt for confirmation)

=========================================


NAME:
   set-space-quota - Assign a space quota definition to a space

USAGE:
   cf set-space-quota SPACE-NAME SPACE-QUOTA-NAME

=========================================


NAME:
   unset-space-quota - Unassign a quota from a space

USAGE:
   cf unset-space-quota SPACE QUOTA



=========================================


NAME:
   service-auth-tokens - List service auth tokens

USAGE:
   cf service-auth-tokens

=========================================


NAME:
   create-service-auth-token - Create a service auth token

USAGE:
   cf create-service-auth-token LABEL PROVIDER TOKEN

=========================================


NAME:
   update-service-auth-token - Update a service auth token

USAGE:
   cf update-service-auth-token LABEL PROVIDER TOKEN

=========================================


NAME:
   delete-service-auth-token - Delete a service auth token

USAGE:
   cf delete-service-auth-token LABEL PROVIDER [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   service-brokers - List service brokers

USAGE:
   cf service-brokers

=========================================


NAME:
   create-service-broker - Create a service broker

USAGE:
   cf create-service-broker SERVICE_BROKER USERNAME PASSWORD URL

=========================================


NAME:
   update-service-broker - Update a service broker

USAGE:
   cf update-service-broker SERVICE_BROKER USERNAME PASSWORD URL

=========================================


NAME:
   delete-service-broker - Delete a service broker

USAGE:
   cf delete-service-broker SERVICE_BROKER [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   rename-service-broker - Rename a service broker

USAGE:
   cf rename-service-broker SERVICE_BROKER NEW_SERVICE_BROKER

=========================================


NAME:
   migrate-service-instances - Migrate service instances from one service plan to another

USAGE:
   cf migrate-service-instances v1_SERVICE v1_PROVIDER v1_PLAN v2_SERVICE v2_PLAN

WARNING: This operation is internal to Cloud Foundry; service brokers will not be contacted and resources for service instances will not be altered. The primary use case for this operation is to replace a service broker which implements the v1 Service Broker API with a broker which implements the v2 API by remapping service instances from v1 plans to v2 plans.  We recommend making the v1 plan private or shutting down the v1 broker to prevent additional instances from being created. Once service instances have been migrated, the v1 services and plans can be removed from Cloud Foundry.

OPTIONS:
   -f	Force migration without confirmation

=========================================


NAME:
   purge-service-offering - Recursively remove a service and child objects from Cloud Foundry database without making requests to a service broker

USAGE:
   cf purge-service-offering SERVICE [-p PROVIDER]

WARNING: This operation assumes that the service broker responsible for this service offering is no longer available, and all service instances have been deleted, leaving orphan records in Cloud Foundry's database. All knowledge of the service will be removed from Cloud Foundry, including service instances and service bindings. No attempt will be made to contact the service broker; running this command without destroying the service broker will cause orphan service instances. After running this command you may want to run either delete-service-auth-token or delete-service-broker to complete the cleanup.

OPTIONS:
   -p 	Provider
   -f	Force deletion without confirmation

=========================================


NAME:
   service-access - List service access settings

USAGE:
   cf service-access [-b BROKER] [-e SERVICE] [-o ORG]

OPTIONS:
   -b 	access for plans of a particular broker
   -e 	access for plans of a particular service offering
   -o 	plans accessible by a particular organization

=========================================


NAME:
   enable-service-access - Enable access to a service or service plan for one or all orgs

USAGE:
   cf enable-service-access SERVICE [-p PLAN] [-o ORG]

OPTIONS:
   -p 	Enable access to a specified service plan
   -o 	Enable access for a specified organization

=========================================


NAME:
   disable-service-access - Disable access to a service or service plan for one or all orgs

USAGE:
   cf disable-service-access SERVICE [-p PLAN] [-o ORG]

OPTIONS:
   -p 	Disable access to a specified service plan
   -o 	Disable access for a specified organization

=========================================


NAME:
   security-group - Show a single security group

USAGE:
   cf security-group SECURITY_GROUP

=========================================


NAME:
   security-groups - List all security groups

USAGE:
   cf security-group

=========================================


NAME:
   create-security-group - Create a security group

USAGE:
   cf create-security-group SECURITY_GROUP PATH_TO_JSON_RULES_FILE

   The provided path can be an absolute or relative path to a file.  The file should have
   a single array with JSON objects inside describing the rules.  The JSON Base Object is 
   omitted and only the square brackets and associated child object are required in the file.  

   Valid json file example:
   [
     {
       "protocol": "tcp",
       "destination": "10.244.1.18",
       "ports": "3306"
     }
   ]

=========================================


NAME:
   update-security-group - Update a security group

USAGE:
   cf update-security-group SECURITY_GROUP PATH_TO_JSON_RULES_FILE

   The provided path can be an absolute or relative path to a file.
   It should have a single array with JSON objects inside describing the rules.

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   delete-security-group - Deletes a security group

USAGE:
   cf delete-security-group SECURITY_GROUP [-f]

OPTIONS:
   -f	Force deletion without confirmation

=========================================


NAME:
   bind-security-group - Bind a security group to a space

USAGE:
   cf bind-security-group SECURITY_GROUP ORG SPACE

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   unbind-security-group - Unbind a security group from a space

USAGE:
   cf unbind-security-group SECURITY_GROUP ORG SPACE

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   bind-staging-security-group - Bind a security group to the list of security groups to be used for staging applications

USAGE:
   cf bind-staging-security-group SECURITY_GROUP

=========================================


NAME:
   staging-security-groups - List security groups in the staging set for applications

USAGE:
   cf staging-security-groups

=========================================


NAME:
   unbind-staging-security-group - Unbind a security group from the set of security groups for staging applications

USAGE:
   cf unbind-staging-security-group SECURITY_GROUP

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   bind-running-security-group - Bind a security group to the list of security groups to be used for running applications

USAGE:
   cf bind-running-security-group SECURITY_GROUP

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   running-security-groups - List security groups in the set of security groups for running applications

USAGE:
   cf running-security-groups

=========================================


NAME:
   unbind-running-security-group - Unbind a security group from the set of security groups for running applications

USAGE:
   cf unbind-running-security-group SECURITY_GROUP

TIP: Changes will not apply to existing running applications until they are restarted.

=========================================


NAME:
   running-environment-variable-group - Retrieve the contents of the running environment variable group

ALIAS:
   revg

USAGE:
   cf running-environment-variable-group

=========================================


NAME:
   staging-environment-variable-group - Retrieve the contents of the staging environment variable group

ALIAS:
   sevg

USAGE:
   cf staging-environment-variable-group

=========================================


NAME:
   set-staging-environment-variable-group - Pass parameters as JSON to create a staging environment variable group

ALIAS:
   ssevg

USAGE:
   cf set-staging-environment-variable-group '{"name":"value","name":"value"}'

=========================================


NAME:
   set-running-environment-variable-group - Pass parameters as JSON to create a running environment variable group

ALIAS:
   srevg

USAGE:
   cf set-running-environment-variable-group '{"name":"value","name":"value"}'

=========================================


NAME:
   feature-flags - Retrieve list of feature flags with status of each flag-able feature

USAGE:
   cf feature-flags

=========================================


NAME:
   feature-flag - Retrieve an individual feature flag with status

USAGE:
   cf feature-flag

=========================================


NAME:
   enable-feature-flag - Enable the use of a feature so that users have access to and can use the feature.

USAGE:
   cf enable-feature-flag FEATURE_NAME

=========================================


NAME:
   disable-feature-flag - Disable the use of a feature so that users have access to and can use the feature.

USAGE:
   cf disable-feature-flag FEATURE_NAME

=========================================


NAME:
   curl - Executes a raw request, content-type set to application/json by default

USAGE:
   cf curl PATH [-iv] [-X METHOD] [-H HEADER] [-d DATA] [--output FILE]

OPTIONS:
   -i		Include response headers in the output
   -v		Enable CF_TRACE output for all requests and responses
   -X 'GET'	HTTP method (GET,POST,PUT,DELETE,etc)
   -H 		Custom headers to include in the request, flag can be specified multiple times
   -d 		HTTP data to include in the request body
   --output 	Write curl body to FILE instead of stdout

=========================================


NAME:
   config - write default values to the config

USAGE:
   cf config [--async-timeout TIMEOUT_IN_MINUTES] [--trace true | false | path/to/file] [--color true | false] [--locale (LOCALE | CLEAR)]

OPTIONS:
   --async-timeout 	Timeout for async HTTP requests
   --trace 		Trace HTTP requests
   --color 		Enable or disable color
   --locale 		Set default locale. If LOCALE is CLEAR, previous locale is deleted.

=========================================


NAME:
   oauth-token - Retrieve and display the OAuth token for the current session

USAGE:
   cf oauth-token

=========================================


NAME:
   plugins - list all available plugin commands

USAGE:
   cf plugins

=========================================


NAME:
   install-plugin - Install the plugin defined in command argument

USAGE:
   cf install-plugin PATH/TO/PLUGIN

=========================================


NAME:
   uninstall-plugin - Uninstall the plugin defined in command argument

USAGE:
   cf uninstall-plugin PLUGIN-NAME

=========================================


